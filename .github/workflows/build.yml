name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Build Environment (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm gcc python3-dev python3-pip
          
      - name: Setup Build Environment (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install nasm
          
      - name: Setup Build Environment (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install nasm
          
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Build Core VM
        run: |
          chmod +x build.sh
          ./build.sh
          
      - name: Build C FFI Library
        run: |
          mkdir -p build/lib
          gcc -shared -fPIC -O2 -o build/lib/libnanocore_ffi.so glue/ffi/nanocore_ffi.c
          
      - name: Test Python Bindings
        run: |
          python3 -c "import sys; sys.path.append('.'); from glue.python.nanocore import VM; vm = VM(); print('Python bindings work!')"
          
      - name: Build Rust Bindings
        run: |
          cd glue/rust
          cargo build --release
          cargo test
          
      - name: Build JavaScript Bindings
        run: |
          cd glue/javascript
          npm install
          npm run build
          
      - name: Test CLI Tool
        run: |
          python3 cli/nanocore-cli.py --help
          
      - name: Run Tests
        run: |
          python3 test_runner.py
          
  coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm gcc python3-dev
          
      - name: Build with Coverage
        run: |
          gcc -shared -fPIC -O2 --coverage -o build/lib/libnanocore_ffi.so glue/ffi/nanocore_ffi.c
          
      - name: Run Tests with Coverage
        run: |
          python3 test_runner.py
          
  release:
    needs: [build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Build Release Artifacts
        run: |
          ./build.sh
          mkdir -p dist
          cp build/lib/* dist/
          tar -czf dist/nanocore-release.tar.gz build/ glue/ cli/ docs/
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: false
          prerelease: false